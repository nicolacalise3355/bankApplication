// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    {
      "backgroundColor": "rgb(240, 240, 240)",
      "borderRadius": 16,
      "display": "flex",
      "gap": 2,
      "padding": 8,
      "paddingTop": 0,
      "width": "100%",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="messageBox"
  >
    <View
      style={
        {
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "flex-end",
          "padding": 4,
        }
      }
    >
      <Text
        style={
          {
            "fontSize": 18,
            "fontWeight": "700",
          }
        }
      >
        X
      </Text>
    </View>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <View
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          {
            "fontSize": 18,
            "fontWeight": "600",
          }
        }
      >
        Message: 
        Title
      </Text>
    </View>
  </View>
</View>
`;
